mutation AddNewReview @auth(level: USER) {
  review_insert(data: {userId_expr: "auth.uid", movieId: "550e8400-e29b-41d4-a716-446655440000", watchId: "550e8400-e29b-41d4-a716-446655440000", rating: 5, isPublic: true})
}

query GetMyMovieLists @auth(level: USER) {
  movieLists(where: {userId: {eq_expr: "auth.uid"}}) {
    id
    name
    description
  }
}

mutation UpdateMovieList($movieListId: UUID!, $name: String, $description: String, $isPublic: Boolean) @auth(level: USER) {
  movieList_update(
    key: {id: $movieListId}
    data: {name: $name, description: $description, isPublic: $isPublic}
  )
}

query ListPublicMovieLists @auth(level: PUBLIC) {
  movieLists(where: {isPublic: {eq: true}}) {
    id
    name
    description
    user {
      displayName
    }
  }
}